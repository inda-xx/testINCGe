name: Generate TA Exercise

on: 
    workflow_dispatch:
        inputs:
            language:
                description: 'Programming language for the exercises'
                required: true
                type: choice
                options:
                  - Java
                  - Python
                  - C
                  - C++
                  - Rust
                  - Haskell
                default: Java
            number_of_exercises:
                description: 'Number of exercises to generate'
                required: true
                type: choice
                options:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                default: '3'
            exercise_1_details:
                description: 'Details for Exercise 1 (e.g., "medium,Loops, Arrays, Create a function to reverse an array")'
                required: true
                default: 'medium,Loops, Arrays, Create a function to reverse an array'
            exercise_2_details:
                description: 'Details for Exercise 2 (optional, e.g., "hard,Recursion, Implement a recursive factorial function")'
                required: false
                default: ''
            exercise_3_details:
                description: 'Details for Exercise 3 (optional, e.g., "simple,Strings, Convert a string to uppercase")'
                required: false
                default: ''
            exercise_4_details:
                description: 'Details for Exercise 4 (optional, e.g., "v.hard,HashMaps, Build a key-value store")'
                required: false
                default: ''
            exercise_5_details:
                description: 'Details for Exercise 5 (optional, e.g., "medium,File I/O, Read data from a CSV file")'
                required: false
                default: ''
            branch_name:
                description: 'Branch name for this task'
                required: true
                default: 'task-branch'

permissions:
  contents: write  
  pull-requests: write

jobs:
  generate-task-description:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai pytz

      - name: Generate task description
        id: generate-task-description
        env:
          OPENAI_API_KEY: ${{ secrets.FINE_TUNED_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TASK_LANGUAGE: ${{ github.event.inputs.language }}
          NUMBER_OF_EXERCISES: ${{ github.event.inputs.number_of_exercises }}
          PROGRAMMING_LANGUAGE: ${{ github.event.inputs.language }}
          EXERCISE_1_DETAILS: ${{ github.event.inputs.exercise_1_details }}
          EXERCISE_2_DETAILS: ${{ github.event.inputs.exercise_2_details || '' }}
          EXERCISE_3_DETAILS: ${{ github.event.inputs.exercise_3_details || '' }}
          EXERCISE_4_DETAILS: ${{ github.event.inputs.exercise_4_details || '' }}
          EXERCISE_5_DETAILS: ${{ github.event.inputs.exercise_5_details || '' }}
        run: |
          python scripts/exercise_description.py "${{ secrets.FINE_TUNED_KEY }}" "${{ github.event.inputs.number_of_exercises }}" "${{ github.event.inputs.language }}" "${{ github.event.inputs.language }}" \
          "${{ github.event.inputs.exercise_1_details }}" "${{ github.event.inputs.exercise_2_details }}" \
          "${{ github.event.inputs.exercise_3_details }}" "${{ github.event.inputs.exercise_4_details }}" \
          "${{ github.event.inputs.exercise_5_details }}"

      # Configure Git user information
      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Create new branch
        run: |
          git checkout -b ${{ github.event.inputs.branch_name }}
          git add tasks/new_task.md
          git commit -m "Add new task description"
          git push origin ${{ github.event.inputs.branch_name }}

  generate-solution:
    runs-on: ubuntu-latest
    needs: generate-task-description
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch_name }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai pytz

      - name: Generate solution
        id: generate-solution
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python scripts/solution_generation.py "${{ secrets.OPENAI_TOKEN }}" "${{ github.event.inputs.branch_name }}"

      # Configure Git user information (again for this job)
      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      # Push the solution back to the same branch
      - name: Push solution to branch
        run: |
          git add tasks/solution.md
          git commit -m "Add solution to task"
          git push origin ${{ github.event.inputs.branch_name }}
